    // Send a synchronous message. The result is returned.    // If a result doesn't come back in 'timeout' seconds, undefined is returned.    BridgeTalk.prototype.sendSynch = function(timeout) {    var self = this;    self.onResult = function(res) {    this.result = res.body;    this.complete = true;    }    self.complete = false;    self.send();    if (timeout) {    for (var i = 0; i < timeout; i++) {    BridgeTalk.pump(); // process any outstanding messages    if (!self.complete) {    $.sleep(1000);    } else {    break;    }    }    }    var res = self.result;    self.result = self.complete = self.onResult = undefined;    return res;    };    // for typos, provide an alias    BridgeTalk.prototype.sendSync = BridgeTalk.prototype.sendSynch;//~ And now an example of how to use it ://~     function test() {//~     var bt = new BridgeTalk();//~     var bridgeSpec=BridgeTalk.getSpecifier("bridge");//~    bt.target=bridgeSpec;//~     bt.body = "new Date().toString()";//~     var res = bt.sendSynch(10);//~     alert(res);//~     };//~     test(); 