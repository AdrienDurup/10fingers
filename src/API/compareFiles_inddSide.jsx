//BETA b0.5#target indesign-14;#targetengine 'Test';#include '../API/logFolder.jsx';#include '../API/toolbox.jsx';#include '../API/bridgeTalkSync.jsx';var myDoc=app.activeDocument;var myPages=myDoc.spreads;var arrLinks=[];var bt;var res;var compar=[];var creaDates=[];var debug={'1':false,'2':true};try{    var mySelec=myDoc.selection;    var mySelecLen=mySelec.length;debugln('mySelecLen = '+mySelecLen,'1');    }catch(error){alert('Aucune sélection. '+error)};function getLinks(graphs){        var graphLinks=new Array();        var graphLen=graphs.length;        for(var v=0;v<graphLen;v++){            if(graphs[v].itemLink!=undefined){                 graphLinks.push(graphs[v].itemLink);                    };             };        debugln('graphLinks length : '+graphLinks.length,'1');        return graphLinks;}function processGraph(mySelec){    var myGraphs=new Array();    var wholeTxt='';    for(k=0;k<mySelecLen;k++){            if(mySelec[k].contentType.toString()=='GRAPHIC_TYPE'){                         myGraphs.push(mySelec[k].graphics[0]);                        };    };    arrLinks=getLinks(myGraphs);} processGraph(mySelec);        function getInfoFromBridge(bt,aLink){   bt = new BridgeTalk();   debugln(aLink.filePath,1);   var bridgeSpec=BridgeTalk.getSpecifier("bridge");   bt.target=bridgeSpec;   var fileToSend=new File(aLink.filePath);bt.body="var path='"+fileToSend.relativeURI+"'; $.evalFile('/Users/creation/Documents/Adobe Scripts/API/compareFiles_bridgeSide.jsx'); ";bt.onResult=function(response){                    if(response.body!=''){                        compar.push(response.body);                        debugln(aLink.name+' ==> '+compar[compar.length-1],2);                        if(compar.length==arrLinks.length){comparons();};                        };                    };bt.send();} function letsLoop(){    for(var i=0;i<arrLinks.length;i++){           var myItemLink=arrLinks[i];           creaDates[i]=arrLinks[i].linkXmp.creationDate;           getInfoFromBridge(bt,myItemLink);       };}function comparons(){               var val1=compar[0]/100000 ; val1=val1.toFixed(10); debugln(val1,2);               var val2=compar[1]/100000 ; val2=val2.toFixed(10); debugln(val2,2);                var diff=(val1<val2)?(val1/val2):(val2/val1);                debugln('Similarité de la longueur = '+diff.toFixed(10),2);                debugln('Similarité de date de creation = \r'+creaDates[0]+'\r'+creaDates[1],2);                var dat1=creaDates[0].toString();                var dat2=creaDates[1].toString();                if (diff>0.99999&&dat1==dat2){                    debugln('IMAGES PROBABLEMENT IDENTIQUES',2);                    }else{debugln('ATTENTION, IMAGES PROBABLEMENT DIFFERENTES',2);};                }letsLoop();//~ waitForResult(150);//~ comparons();//~ function waitForResult(timeout){//~         if (timeout) {//~             for (var i = 0; i < timeout; i++) {//~                 if(compar.length==arrLinks.length){//~                     break;//~                 }else{//~                     if(compar.length>0&&compar[compar.length-1]=='undefined'){debugln('loop fail',2);break;};//~                     if(compar.length!=0){//~                         debugln('COMPAR UPDATED',2);//~                             }else{debugln(compar[compar.length-1]+' <==> '+compar.length,2);};//~                             $.sleep(100);//~                             debugln(i*100,2);//~                     };//~                     };//~                 };//~ } 